{"version":3,"sources":["Restaurants.js","App.js","index.js"],"names":["Restaurants","restaurants","isOnline","restaurant","online","id","map","className","key","name","src","image","alt","tags","stringOfTags","forEach","tag","i","length","setTags","setOnlineText","App","useState","setRestaurants","sortedAsc","setSortedAsc","useEffect","fetch","then","data","json","onClick","sortButton","document","getElementById","sort","a","b","innerHTML","sortRestaurants","ReactDOM","render"],"mappings":"6KAEe,SAASA,EAAT,GAAqC,IAAfC,EAAc,EAAdA,YAGjC,SAASC,EAASC,GACd,OAAyB,IAAtBA,EAAWC,OACH,cAEA,gBAwBf,OACI,yBAAKC,GAAG,eACHJ,EAAYK,KAAI,SAAAH,GAAU,OACvB,yBAAKI,UAAU,iBAAiBC,IAAKL,EAAWM,MAC5C,yBAAKF,UAAU,kBAAkBG,IAAKP,EAAWQ,MAAOC,IAAI,KAC5D,wBAAIL,UAAU,mBAAmBJ,EAAWM,MAC5C,yBAAKF,UAAU,QAlB/B,SAAiBM,GACb,IAAIC,EAAe,GASnB,OARAD,EAAKE,SAAQ,SAACC,EAAKC,GACZA,EAAIJ,EAAKK,OAAO,EACfJ,GAAeE,EAAM,KAErBF,GAAeE,KAIhBF,EAQ4BK,CAAQhB,EAAWU,OAC1C,yBAAKN,UAAWL,EAASC,IA3BzC,SAAuBA,GACnB,OAAyB,IAAtBA,EAAWC,OACH,SAEA,SAuBwCgB,CAAcjB,S,KCa1DkB,MAjDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNrB,EADM,KACOsB,EADP,OAEqBD,oBAAS,GAF9B,mBAENE,EAFM,KAEKC,EAFL,KAyCb,OArCAC,qBAAU,WACRC,MAAM,4DACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAAI,OACRN,EAAeM,EAAK5B,YAAYK,KAAI,SAAAH,GAAU,OAAIA,WACnD,IAiCD,yBAAKE,GAAG,QACN,4BAAQE,UAAU,aAAcF,GAAG,kBAAiB0B,QAAS,kBAhCjE,WACE,IAAMC,EAAaC,SAASC,eAAe,oBAC1B,IAAdV,GACCvB,EAAYkC,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAE3B,KAAO4B,EAAE5B,MACH,EACD2B,EAAE3B,KAAO4B,EAAE5B,KACX,EAEA,KAGfgB,GAAa,GACbO,EAAWM,UAAY,gBACJ,IAAdd,IACLvB,EAAYkC,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAE3B,KAAO4B,EAAE5B,MACH,EACD2B,EAAE3B,KAAO4B,EAAE5B,KACX,EAEA,KAGfgB,GAAa,GACbO,EAAWM,UAAY,eAE3Bf,EAAetB,EAAYK,KAAI,SAAAH,GAAU,OAAIA,MAKwBoC,KAAnE,eACA,kBAACvC,EAAD,CAAaC,YAAaA,MC5ChCuC,IAASC,OAAO,kBAAC,EAAD,MAASR,SAASC,eAAe,U","file":"static/js/main.c2f51b39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Restaurants({restaurants}) {\r\n\r\n\r\n    function isOnline(restaurant){\r\n        if(restaurant.online === true){\r\n            return 'online open';\r\n        }else{\r\n            return 'online closed';\r\n        }\r\n    }\r\n\r\n    function setOnlineText(restaurant){\r\n        if(restaurant.online === true){\r\n            return 'Online';\r\n        }else{\r\n            return 'Closed';\r\n        }\r\n    }\r\n\r\n    function setTags(tags){\r\n        let stringOfTags = \"\";\r\n        tags.forEach((tag, i) => {\r\n            if(i < tags.length-1){\r\n                stringOfTags+= tag + \", \";\r\n            }else{\r\n                stringOfTags+= tag;\r\n            }\r\n           \r\n        });\r\n        return stringOfTags;\r\n    }\r\n    return (\r\n        <div id=\"restaurants\">\r\n            {restaurants.map(restaurant => (\r\n                <div className=\"restaurantCard\" key={restaurant.name}>\r\n                    <img className=\"restaurantImage\" src={restaurant.image} alt=\"\"/>\r\n                    <h3 className=\"restaurantTitle\">{restaurant.name}</h3>\r\n                    <div className=\"tags\">{setTags(restaurant.tags)}</div>\r\n                    <div className={isOnline(restaurant)}>{setOnlineText(restaurant)}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport Restaurants from './Restaurants';\nimport './style.css';\n\nfunction App() {\n  const [restaurants, setRestaurants] = useState([]);\n  const [sortedAsc, setSortedAsc] = useState(false);\n\n  useEffect(() => {\n    fetch('https://alicefritz.github.io/summer2020/restaurants.json')\n    .then(data => data.json())\n    .then(data =>\n      setRestaurants(data.restaurants.map(restaurant => restaurant)))\n  }, []);\n\n  function sortRestaurants(){\n    const sortButton = document.getElementById('sortByAscButton');\n    if(sortedAsc === false){\n        restaurants.sort((a, b) => {\n            if (a.name < b.name){\n                return -1;\n            } else if (a.name > b.name){\n                return 1;\n            } else{\n                return 0;\n            }\n        });\n        setSortedAsc(true);\n        sortButton.innerHTML = \"Sort by Z-A\";\n    }else if(sortedAsc === true){\n        restaurants.sort((a, b) => {\n            if (a.name > b.name){\n                return -1;\n            } else if (a.name < b.name){\n                return 1;\n            } else{\n                return 0;\n            }\n        });\n        setSortedAsc(false);\n        sortButton.innerHTML = \"Sort by A-Z\";\n    }\n    setRestaurants(restaurants.map(restaurant => restaurant))\n  }\n\n  return (\n    <div id=\"main\">\n      <button className=\"sortButton\"  id=\"sortByAscButton\"onClick={() => sortRestaurants()}>Sort by A-Z</button>\n      <Restaurants restaurants={restaurants}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}